import pandas as pd


def calculate_demographic_data(print_data=True):
    # Read data from file
    df = pd.read_csv(
        "./adult.data.csv",
        sep=",",
        header=0,
        names=[
            "age",
            "workclass",
            "final-weight",
            "education",
            "education-num",
            "marital-status",
            "occupation",
            "relationship",
            "race",
            "sex",
            "capital-gain",
            "capital-loss",
            "hours-per-week",
            "native-country",
            "salary",
        ],
    )

    # How many of each race are represented in this dataset? This should be a Pandas series with race names as the index labels.
    race_count = df.groupby("race")["race"].count()

    # What is the average age of men?
    sex = "Male"
    age_of_sex = df.loc[df["sex"] == sex, "age"]
    average_age_men = age_of_sex.mean().round(1)

    # What is the percentage of people who have a Bachelor's degree?
    def get_percentage(dataframe, mask, label):
        return (
            dataframe.loc[(mask), label].count() / dataframe[label].count() * 100
        ).round(1)

    degree = "Bachelors"
    percentage_bachelors = get_percentage(df, (df["education"] == degree), "education")

    # What percentage of people with advanced education (`Bachelors`, `Masters`, or `Doctorate`) make more than 50K?
    # What percentage of people without advanced education make more than 50K?
    has_advanced_edu = (
        (df["education"] == "Bachelors")
        | (df["education"] == "Masters")
        | (df["education"] == "Doctorate")
    )

    # with and without `Bachelors`, `Masters`, or `Doctorate`
    higher_education = df[has_advanced_edu]
    lower_education = df[~has_advanced_edu]

    # percentage with salary >50K
    bigger50k = ">50K"
    higher_education_rich = get_percentage(
        higher_education, (higher_education["salary"] == bigger50k), "salary"
    )
    lower_education_rich = get_percentage(
        lower_education, (lower_education["salary"] == bigger50k), "salary"
    )

    # What is the minimum number of hours a person works per week (hours-per-week feature)?
    min_work_hours = df["hours-per-week"].min()

    # What percentage of the people who work the minimum number of hours per week have a salary of >50K?
    num_min_workers = df.loc[
        df["hours-per-week"] == min_work_hours, "hours-per-week"
    ].count()
    rich_percentage = (
        df.loc[
            (df["hours-per-week"] == min_work_hours) & (df["salary"] == bigger50k),
            "hours-per-week",
        ].count()
        / num_min_workers
        * 100
    )

    # What country has the highest percentage of people that earn >50K?
    per_country_bigger50k_amount = (
        df.loc[(df["salary"] == bigger50k), "native-country"]
        .groupby("native-country")
        .count()
    )
    print(per_country_bigger50k_amount)
    highest_earning_country = None
    # highest_earning_country = (
    #    df.loc[(by_countries["salary"] == bigger50k), "native-country"].count().max()
    # )
    # print(highest_earning_country)
    highest_earning_country_percentage = None

    # Identify the most popular occupation for those who earn >50K in India.
    top_IN_occupation = (
        df.loc[
            (df["native-country"] == "India") & (df["salary"] == bigger50k),
            "occupation",
        ]
        .value_counts()
        .idxmax()
    )

    # DO NOT MODIFY BELOW THIS LINE

    if print_data:
        print("Number of each race:\n", race_count)
        print("Average age of men:", average_age_men)
        print(f"Percentage with Bachelors degrees: {percentage_bachelors}%")
        print(
            f"Percentage with higher education that earn >50K: {higher_education_rich}%"
        )
        print(
            f"Percentage without higher education that earn >50K: {lower_education_rich}%"
        )
        print(f"Min work time: {min_work_hours} hours/week")
        print(
            f"Percentage of rich among those who work fewest hours: {rich_percentage}%"
        )
        print("Country with highest percentage of rich:", highest_earning_country)
        print(
            f"Highest percentage of rich people in country: {highest_earning_country_percentage}%"
        )
        print("Top occupations in India:", top_IN_occupation)

    return {
        "race_count": race_count,
        "average_age_men": average_age_men,
        "percentage_bachelors": percentage_bachelors,
        "higher_education_rich": higher_education_rich,
        "lower_education_rich": lower_education_rich,
        "min_work_hours": min_work_hours,
        "rich_percentage": rich_percentage,
        "highest_earning_country": highest_earning_country,
        "highest_earning_country_percentage": highest_earning_country_percentage,
        "top_IN_occupation": top_IN_occupation,
    }
